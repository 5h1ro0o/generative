{"ast":null,"code":"// Configuration de base\nconst BASE_URL = '/api';\n\n// Fonction utilitaire pour g√©rer les r√©ponses\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.json().catch(() => ({}));\n    throw new Error(error.message || `Erreur HTTP ${response.status}`);\n  }\n  return response.json();\n};\n\n// Configuration des requ√™tes\nconst fetchWithConfig = async (endpoint, options = {}) => {\n  const fullUrl = `${BASE_URL}${endpoint.startsWith('/') ? endpoint : `/${endpoint}`}`;\n  console.log(`üîç Appel API vers: ${fullUrl}`);\n  const defaultHeaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  };\n  const config = {\n    ...options,\n    headers: {\n      ...defaultHeaders,\n      ...options.headers\n    }\n  };\n  try {\n    console.log(`üì§ Envoi requ√™te vers: ${fullUrl}`);\n    const response = await fetch(fullUrl, config);\n    console.log(`üì• R√©ponse re√ßue: ${response.status}`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error(`‚ùå Erreur API (${fullUrl}):`, error);\n    throw error;\n  }\n};\nconst api = {\n  // Produits\n  getProducts: async () => {\n    console.log('üì¶ R√©cup√©ration des produits...');\n    try {\n      const data = await fetchWithConfig('/products', {\n        method: 'GET'\n      });\n      console.log('‚úÖ Produits re√ßus:', data);\n      return data;\n    } catch (error) {\n      console.error('‚ùå Erreur products:', error);\n      throw error;\n    }\n  },\n  getProductById: productId => fetchWithConfig(`/products/${productId}`),\n  // Panier\n  getCart: (userId = '123456') => fetchWithConfig(`/cart/user/${userId}`),\n  addToCart: (productId, quantity, userId = '123456') => fetchWithConfig('/cart', {\n    method: 'POST',\n    body: JSON.stringify({\n      productId,\n      quantity,\n      userId\n    })\n  }),\n  removeFromCart: itemId => fetchWithConfig(`/cart/${itemId}`, {\n    method: 'DELETE'\n  }),\n  // Test de connexion\n  checkConnection: async () => {\n    try {\n      console.log('üîå Test de connexion API...');\n      const response = await fetch(`${BASE_URL}/products`);\n      console.log('üì° Status:', response.status);\n      const data = await response.json();\n      console.log('üì• Donn√©es re√ßues:', data);\n      return response.ok;\n    } catch (error) {\n      console.error('‚ùå Erreur de connexion:', error);\n      return false;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["BASE_URL","handleResponse","response","ok","error","json","catch","Error","message","status","fetchWithConfig","endpoint","options","fullUrl","startsWith","console","log","defaultHeaders","config","headers","fetch","api","getProducts","data","method","getProductById","productId","getCart","userId","addToCart","quantity","body","JSON","stringify","removeFromCart","itemId","checkConnection"],"sources":["C:/Users/matte/Desktop/Cours_B3/generative/projet 1/ecommerce-app/frontend/src/utils/api.js"],"sourcesContent":["// Configuration de base\r\nconst BASE_URL = '/api';\r\n\r\n// Fonction utilitaire pour g√©rer les r√©ponses\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const error = await response.json().catch(() => ({}));\r\n    throw new Error(error.message || `Erreur HTTP ${response.status}`);\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// Configuration des requ√™tes\r\nconst fetchWithConfig = async (endpoint, options = {}) => {\r\n  const fullUrl = `${BASE_URL}${endpoint.startsWith('/') ? endpoint : `/${endpoint}`}`;\r\n  console.log(`üîç Appel API vers: ${fullUrl}`);\r\n  \r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  };\r\n\r\n  const config = {\r\n    ...options,\r\n    headers: {\r\n      ...defaultHeaders,\r\n      ...options.headers,\r\n    },\r\n  };\r\n\r\n  try {\r\n    console.log(`üì§ Envoi requ√™te vers: ${fullUrl}`);\r\n    const response = await fetch(fullUrl, config);\r\n    console.log(`üì• R√©ponse re√ßue: ${response.status}`);\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error(`‚ùå Erreur API (${fullUrl}):`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst api = {\r\n  // Produits\r\n  getProducts: async () => {\r\n    console.log('üì¶ R√©cup√©ration des produits...');\r\n    try {\r\n      const data = await fetchWithConfig('/products', {\r\n        method: 'GET',\r\n      });\r\n      console.log('‚úÖ Produits re√ßus:', data);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur products:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getProductById: (productId) => \r\n    fetchWithConfig(`/products/${productId}`),\r\n\r\n  // Panier\r\n  getCart: (userId = '123456') => \r\n    fetchWithConfig(`/cart/user/${userId}`),\r\n\r\n  addToCart: (productId, quantity, userId = '123456') => \r\n    fetchWithConfig('/cart', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ productId, quantity, userId })\r\n    }),\r\n\r\n  removeFromCart: (itemId) => \r\n    fetchWithConfig(`/cart/${itemId}`, {\r\n      method: 'DELETE'\r\n    }),\r\n\r\n  // Test de connexion\r\n  checkConnection: async () => {\r\n    try {\r\n      console.log('üîå Test de connexion API...');\r\n      const response = await fetch(`${BASE_URL}/products`);\r\n      console.log('üì° Status:', response.status);\r\n      const data = await response.json();\r\n      console.log('üì• Donn√©es re√ßues:', data);\r\n      return response.ok;\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur de connexion:', error);\r\n      return false;\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}