{"ast":null,"code":"// Configuration de base\nconst BASE_URL='/api';// Fonction utilitaire pour g√©rer les r√©ponses\nconst handleResponse=async response=>{if(!response.ok){const error=await response.json().catch(()=>({}));throw new Error(error.message||`Erreur HTTP ${response.status}`);}return response.json();};// Configuration des requ√™tes\nconst fetchWithConfig=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// S'assurer que l'endpoint commence toujours par /api\nconst fullUrl=endpoint.startsWith('/api')?endpoint:`${BASE_URL}${endpoint.startsWith('/')?endpoint:`/${endpoint}`}`;console.log(`üîç URL finale: ${fullUrl}`);const defaultHeaders={'Content-Type':'application/json','Accept':'application/json'};const config={...options,headers:{...defaultHeaders,...options.headers}};try{console.log(`üì§ Envoi requ√™te vers: ${fullUrl}`);const response=await fetch(fullUrl,config);console.log(`üì• R√©ponse re√ßue: ${response.status}`);return handleResponse(response);}catch(error){console.error(`‚ùå Erreur API (${fullUrl}):`,error);throw error;}};const api={getProducts:async()=>{console.log('üì¶ R√©cup√©ration des produits...');try{// Enlever le /api du chemin car fetchWithConfig l'ajoute d√©j√†\nconst data=await fetchWithConfig('/products',{method:'GET'});console.log('‚úÖ Produits re√ßus:',data);return data;}catch(error){console.error('‚ùå Erreur products:',error);throw error;}},getProductById:async id=>{try{return await fetchWithConfig(`/products/${id}`,{method:'GET'});}catch(error){console.error(`‚ùå Erreur r√©cup√©ration produit ${id}:`,error);throw error;}},// Panier\ngetCart:async userId=>{try{return await fetchWithConfig(`/cart/user/${userId}`,{method:'GET'});}catch(error){console.error('‚ùå Erreur r√©cup√©ration panier:',error);throw error;}},// Test de connexion\ncheckConnection:async()=>{try{console.log('üîå Test de connexion API...');// Utiliser le m√™me chemin que getProducts\nconst response=await fetchWithConfig('/products',{method:'GET'});console.log('‚úÖ Test de connexion r√©ussi');return true;}catch(error){console.error('‚ùå Erreur de connexion:',error);return false;}}};export default api;","map":{"version":3,"names":["BASE_URL","handleResponse","response","ok","error","json","catch","Error","message","status","fetchWithConfig","endpoint","options","arguments","length","undefined","fullUrl","startsWith","console","log","defaultHeaders","config","headers","fetch","api","getProducts","data","method","getProductById","id","getCart","userId","checkConnection"],"sources":["C:/Users/matte/Desktop/Cours_B3/generative/projet 1/ecommerce-app/frontend/src/utils/api.js"],"sourcesContent":["// Configuration de base\r\nconst BASE_URL = '/api';\r\n\r\n// Fonction utilitaire pour g√©rer les r√©ponses\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const error = await response.json().catch(() => ({}));\r\n    throw new Error(error.message || `Erreur HTTP ${response.status}`);\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// Configuration des requ√™tes\r\nconst fetchWithConfig = async (endpoint, options = {}) => {\r\n  // S'assurer que l'endpoint commence toujours par /api\r\n  const fullUrl = endpoint.startsWith('/api') \r\n    ? endpoint \r\n    : `${BASE_URL}${endpoint.startsWith('/') ? endpoint : `/${endpoint}`}`;\r\n  \r\n  console.log(`üîç URL finale: ${fullUrl}`);\r\n  \r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  };\r\n\r\n  const config = {\r\n    ...options,\r\n    headers: {\r\n      ...defaultHeaders,\r\n      ...options.headers,\r\n    },\r\n  };\r\n\r\n  try {\r\n    console.log(`üì§ Envoi requ√™te vers: ${fullUrl}`);\r\n    const response = await fetch(fullUrl, config);\r\n    console.log(`üì• R√©ponse re√ßue: ${response.status}`);\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error(`‚ùå Erreur API (${fullUrl}):`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst api = {\r\n  getProducts: async () => {\r\n    console.log('üì¶ R√©cup√©ration des produits...');\r\n    try {\r\n      // Enlever le /api du chemin car fetchWithConfig l'ajoute d√©j√†\r\n      const data = await fetchWithConfig('/products', {\r\n        method: 'GET'\r\n      });\r\n      console.log('‚úÖ Produits re√ßus:', data);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur products:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getProductById: async (id) => {\r\n    try {\r\n      return await fetchWithConfig(`/products/${id}`, {\r\n        method: 'GET'\r\n      });\r\n    } catch (error) {\r\n      console.error(`‚ùå Erreur r√©cup√©ration produit ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Panier\r\n  getCart: async (userId) => {\r\n    try {\r\n      return await fetchWithConfig(`/cart/user/${userId}`, {\r\n        method: 'GET'\r\n      });\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur r√©cup√©ration panier:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Test de connexion\r\n  checkConnection: async () => {\r\n    try {\r\n      console.log('üîå Test de connexion API...');\r\n      // Utiliser le m√™me chemin que getProducts\r\n      const response = await fetchWithConfig('/products', {\r\n        method: 'GET'\r\n      });\r\n      console.log('‚úÖ Test de connexion r√©ussi');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur de connexion:', error);\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}