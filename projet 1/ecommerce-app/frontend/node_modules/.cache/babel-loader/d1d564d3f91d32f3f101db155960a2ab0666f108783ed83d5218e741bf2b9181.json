{"ast":null,"code":"// Configuration de base\nconst BASE_URL = '/api';\n\n// Fonction utilitaire pour g√©rer les r√©ponses\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.json().catch(() => ({}));\n    throw new Error(error.message || `Erreur HTTP ${response.status}`);\n  }\n  return response.json();\n};\n\n// Configuration des requ√™tes\nconst fetchWithConfig = async (endpoint, options = {}) => {\n  // S'assurer que l'endpoint commence toujours par /api\n  const fullUrl = endpoint.startsWith('/api') ? endpoint : `${BASE_URL}${endpoint.startsWith('/') ? endpoint : `/${endpoint}`}`;\n  console.log(`üîç URL finale: ${fullUrl}`);\n  const defaultHeaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  };\n  const config = {\n    ...options,\n    headers: {\n      ...defaultHeaders,\n      ...options.headers\n    }\n  };\n  try {\n    console.log(`üì§ Envoi requ√™te vers: ${fullUrl}`);\n    const response = await fetch(fullUrl, config);\n    console.log(`üì• R√©ponse re√ßue: ${response.status}`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error(`‚ùå Erreur API (${fullUrl}):`, error);\n    throw error;\n  }\n};\nconst api = {\n  getProducts: async () => {\n    console.log('üì¶ R√©cup√©ration des produits...');\n    try {\n      // Enlever le /api du chemin car fetchWithConfig l'ajoute d√©j√†\n      const data = await fetchWithConfig('/products', {\n        method: 'GET'\n      });\n      console.log('‚úÖ Produits re√ßus:', data);\n      return data;\n    } catch (error) {\n      console.error('‚ùå Erreur products:', error);\n      throw error;\n    }\n  },\n  addToCart: async (product, quantity) => {\n    try {\n      // V√©rifier si l'utilisateur est connect√©\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Vous devez √™tre connect√© pour ajouter au panier');\n      }\n      console.log('üõí Ajout au panier:', product.name);\n\n      // Appel API avec le token d'authentification\n      const response = await api.addToCart(product._id, quantity);\n      if (response) {\n        // Mettre √† jour le state local\n        const newItem = {\n          _id: response._id,\n          product: product,\n          quantity: quantity\n        };\n        const updatedCart = [...cart, newItem];\n\n        // Mettre √† jour les √©tats\n        setCart(updatedCart);\n        setTotal(calculateTotal(updatedCart));\n        setItemCount(updateItemCount(updatedCart));\n        console.log('‚úÖ Produit ajout√© au panier avec succ√®s');\n      }\n    } catch (error) {\n      console.error('‚ùå Erreur lors de l\\'ajout au panier:', error);\n      if (error.message === 'Vous devez √™tre connect√© pour ajouter au panier') {\n        // Rediriger vers la page de connexion ou afficher le modal de connexion\n        // setShowLoginModal(true);\n      }\n      throw error;\n    }\n  },\n  login: async (email, password) => {\n    return fetchWithConfig('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n  },\n  register: async userData => {\n    return fetchWithConfig('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  },\n  getProductById: async id => {\n    try {\n      return await fetchWithConfig(`/products/${id}`, {\n        method: 'GET'\n      });\n    } catch (error) {\n      console.error(`‚ùå Erreur r√©cup√©ration produit ${id}:`, error);\n      throw error;\n    }\n  },\n  // Panier\n  getCart: async userId => {\n    try {\n      return await fetchWithConfig(`/cart/user/${userId}`, {\n        method: 'GET'\n      });\n    } catch (error) {\n      console.error('‚ùå Erreur r√©cup√©ration panier:', error);\n      throw error;\n    }\n  },\n  removeFromCart: async itemId => {\n    try {\n      const response = await fetchWithConfig(`/cart/${itemId}`, {\n        method: 'DELETE'\n      });\n      console.log('‚úÖ Produit supprim√© du panier');\n      return response;\n    } catch (error) {\n      console.error('‚ùå Erreur API removeFromCart:', error);\n      throw error;\n    }\n  },\n  // Test de connexion\n  checkConnection: async () => {\n    try {\n      console.log('üîå Test de connexion API...');\n      // Utiliser le m√™me chemin que getProducts\n      const response = await fetchWithConfig('/products', {\n        method: 'GET'\n      });\n      console.log('‚úÖ Test de connexion r√©ussi');\n      return true;\n    } catch (error) {\n      console.error('‚ùå Erreur de connexion:', error);\n      return false;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["BASE_URL","handleResponse","response","ok","error","json","catch","Error","message","status","fetchWithConfig","endpoint","options","fullUrl","startsWith","console","log","defaultHeaders","config","headers","fetch","api","getProducts","data","method","addToCart","product","quantity","token","localStorage","getItem","name","_id","newItem","updatedCart","cart","setCart","setTotal","calculateTotal","setItemCount","updateItemCount","login","email","password","body","JSON","stringify","register","userData","getProductById","id","getCart","userId","removeFromCart","itemId","checkConnection"],"sources":["C:/Users/matte/Desktop/Cours_B3/generative/projet 1/ecommerce-app/frontend/src/utils/api.js"],"sourcesContent":["// Configuration de base\r\nconst BASE_URL = '/api';\r\n\r\n// Fonction utilitaire pour g√©rer les r√©ponses\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const error = await response.json().catch(() => ({}));\r\n    throw new Error(error.message || `Erreur HTTP ${response.status}`);\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// Configuration des requ√™tes\r\nconst fetchWithConfig = async (endpoint, options = {}) => {\r\n  // S'assurer que l'endpoint commence toujours par /api\r\n  const fullUrl = endpoint.startsWith('/api') \r\n    ? endpoint \r\n    : `${BASE_URL}${endpoint.startsWith('/') ? endpoint : `/${endpoint}`}`;\r\n  \r\n  console.log(`üîç URL finale: ${fullUrl}`);\r\n  \r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  };\r\n\r\n  const config = {\r\n    ...options,\r\n    headers: {\r\n      ...defaultHeaders,\r\n      ...options.headers,\r\n    },\r\n  };\r\n\r\n  try {\r\n    console.log(`üì§ Envoi requ√™te vers: ${fullUrl}`);\r\n    const response = await fetch(fullUrl, config);\r\n    console.log(`üì• R√©ponse re√ßue: ${response.status}`);\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error(`‚ùå Erreur API (${fullUrl}):`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst api = {\r\n  getProducts: async () => {\r\n    console.log('üì¶ R√©cup√©ration des produits...');\r\n    try {\r\n      // Enlever le /api du chemin car fetchWithConfig l'ajoute d√©j√†\r\n      const data = await fetchWithConfig('/products', {\r\n        method: 'GET'\r\n      });\r\n      console.log('‚úÖ Produits re√ßus:', data);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur products:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  addToCart: async (product, quantity) => {\r\n    try {\r\n      // V√©rifier si l'utilisateur est connect√©\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('Vous devez √™tre connect√© pour ajouter au panier');\r\n      }\r\n  \r\n      console.log('üõí Ajout au panier:', product.name);\r\n      \r\n      // Appel API avec le token d'authentification\r\n      const response = await api.addToCart(product._id, quantity);\r\n      \r\n      if (response) {\r\n        // Mettre √† jour le state local\r\n        const newItem = {\r\n          _id: response._id,\r\n          product: product,\r\n          quantity: quantity\r\n        };\r\n  \r\n        const updatedCart = [...cart, newItem];\r\n        \r\n        // Mettre √† jour les √©tats\r\n        setCart(updatedCart);\r\n        setTotal(calculateTotal(updatedCart));\r\n        setItemCount(updateItemCount(updatedCart));\r\n        \r\n        console.log('‚úÖ Produit ajout√© au panier avec succ√®s');\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur lors de l\\'ajout au panier:', error);\r\n      if (error.message === 'Vous devez √™tre connect√© pour ajouter au panier') {\r\n        // Rediriger vers la page de connexion ou afficher le modal de connexion\r\n        // setShowLoginModal(true);\r\n      }\r\n      throw error;\r\n    }\r\n  },\r\n  login: async (email, password) => {\r\n    return fetchWithConfig('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n  },\r\n\r\n  register: async (userData) => {\r\n    return fetchWithConfig('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData)\r\n    });\r\n  },\r\n\r\n  getProductById: async (id) => {\r\n    try {\r\n      return await fetchWithConfig(`/products/${id}`, {\r\n        method: 'GET'\r\n      });\r\n    } catch (error) {\r\n      console.error(`‚ùå Erreur r√©cup√©ration produit ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Panier\r\n  getCart: async (userId) => {\r\n    try {\r\n      return await fetchWithConfig(`/cart/user/${userId}`, {\r\n        method: 'GET'\r\n      });\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur r√©cup√©ration panier:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  removeFromCart: async (itemId) => {\r\n    try {\r\n      const response = await fetchWithConfig(`/cart/${itemId}`, {\r\n        method: 'DELETE'\r\n      });\r\n      console.log('‚úÖ Produit supprim√© du panier');\r\n      return response;\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur API removeFromCart:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Test de connexion\r\n  checkConnection: async () => {\r\n    try {\r\n      console.log('üîå Test de connexion API...');\r\n      // Utiliser le m√™me chemin que getProducts\r\n      const response = await fetchWithConfig('/products', {\r\n        method: 'GET'\r\n      });\r\n      console.log('‚úÖ Test de connexion r√©ussi');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur de connexion:', error);\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}