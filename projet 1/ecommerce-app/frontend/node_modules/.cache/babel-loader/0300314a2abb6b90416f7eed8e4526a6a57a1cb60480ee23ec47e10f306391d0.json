{"ast":null,"code":"import{useState,useEffect}from'react';import api from'../utils/api';export const useProducts=()=>{const[products,setProducts]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchProducts=async()=>{try{setLoading(true);setError(null);console.log('Fetching products...');const response=await fetch('/api/products');console.log('Response status:',response.status);if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const data=await response.json();console.log('Products data received:',data);if(!data||!Array.isArray(data)){console.error('Invalid data format:',data);throw new Error('Format de données invalide');}setProducts(data);}catch(error){console.error('Error fetching products:',error);setError(error.message||'Une erreur est survenue');setProducts([]);}finally{setLoading(false);}};fetchProducts();},[]);return{products,loading,error};};export default useProducts;","map":{"version":3,"names":["useState","useEffect","api","useProducts","products","setProducts","loading","setLoading","error","setError","fetchProducts","console","log","response","fetch","status","ok","Error","data","json","Array","isArray","message"],"sources":["C:/Users/matte/Desktop/Cours_B3/generative/projet 1/ecommerce-app/frontend/src/hooks/useProduct.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\n\r\nexport const useProducts = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        console.log('Fetching products...');\r\n        \r\n        const response = await fetch('/api/products');\r\n        console.log('Response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('Products data received:', data);\r\n        \r\n        if (!data || !Array.isArray(data)) {\r\n          console.error('Invalid data format:', data);\r\n          throw new Error('Format de données invalide');\r\n        }\r\n        \r\n        setProducts(data);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n        setError(error.message || 'Une erreur est survenue');\r\n        setProducts([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return { products, loading, error };\r\n};\r\n\r\nexport default useProducts;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,GAAG,KAAM,cAAc,CAE9B,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGL,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACM,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACFH,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACdE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAEnC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,eAAe,CAAC,CAC7CH,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEC,QAAQ,CAACE,MAAM,CAAC,CAEhD,GAAI,CAACF,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACE,MAAM,EAAE,CAAC,CAC3D,CAEA,KAAM,CAAAG,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCR,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEM,IAAI,CAAC,CAE5C,GAAI,CAACA,IAAI,EAAI,CAACE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,CAAE,CACjCP,OAAO,CAACH,KAAK,CAAC,sBAAsB,CAAEU,IAAI,CAAC,CAC3C,KAAM,IAAI,CAAAD,KAAK,CAAC,4BAA4B,CAAC,CAC/C,CAEAZ,WAAW,CAACa,IAAI,CAAC,CACnB,CAAE,MAAOV,KAAK,CAAE,CACdG,OAAO,CAACH,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDC,QAAQ,CAACD,KAAK,CAACc,OAAO,EAAI,yBAAyB,CAAC,CACpDjB,WAAW,CAAC,EAAE,CAAC,CACjB,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDG,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEN,QAAQ,CAAEE,OAAO,CAAEE,KAAM,CAAC,CACrC,CAAC,CAED,cAAe,CAAAL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}